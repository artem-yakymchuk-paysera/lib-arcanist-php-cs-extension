{
    "files": [
        {
            "name": "lib-arcanist-php-cs-extension\/tests\/diff\/complex-diff-2.php",
            "appliedFixers": [
                "yoda_style",
                "visibility_required",
                "binary_operator_spaces",
                "phpdoc_separation",
                "cast_spaces",
                "blank_line_before_statement",
                "no_extra_blank_lines",
                "phpdoc_align"
            ],
            "diff": "--- Original\n+++ New\n@@ -31,16 +31,16 @@\n     private $translator;\n \n     \/**\n-     * @param Router $router\n-     * @param UserSession $userSession\n-     * @param LoggerInterface $logger\n-     * @param EntityManager $entityManager\n+     * @param Router                 $router\n+     * @param UserSession            $userSession\n+     * @param LoggerInterface        $logger\n+     * @param EntityManager          $entityManager\n      * @param WebToPayLanguageMapper $languageMapper\n-     * @param string $defaultPaymentCountry\n-     * @param string $fallbackLanguage\n-     * @param TranslatorInterface $translator\n+     * @param string                 $defaultPaymentCountry\n+     * @param string                 $fallbackLanguage\n+     * @param TranslatorInterface    $translator\n      *\/\n-    function __construct(\n+    public function __construct(\n         Router $router,\n         UserSession $userSession,\n         LoggerInterface $logger,\n@@ -84,7 +84,7 @@\n             ->setDefaultLanguage($user->getLocale())\n         ;\n \n-        if ($order->getOrderPrice() === null) {\n+        if (null === $order->getOrderPrice()) {\n             throw new Exception('Order price was not set on the last step');\n         }\n \n@@ -106,7 +106,6 @@\n \n     public function getPaymentResponseForUser(User $user, PaymentType $paymentType, $locale)\n     {\n-\n         $request = $this->getWebtopayFactory($user->getOrder())\n             ->getRequestBuilder()\n             ->buildRequest(\n@@ -116,7 +115,7 @@\n                     'orderid' => $user->getOrder()->getId(),\n                     'amount' => $this->calculateOrderFinalPrice($user->getOrder()),\n                     'currency' => $user->getOrder()->getEvent()->getCurrency(),\n-                    'country'  => $user->getOrder()->getEvent()->getCountryCode(),\n+                    'country' => $user->getOrder()->getEvent()->getCountryCode(),\n                     'accepturl' => $this->getAcceptUrlForUser($user, $locale),\n                     'cancelurl' => $this->getCancelUrl($locale),\n                     'callbackurl' => $this->getCallbackUrl($user->getOrder()),\n@@ -131,7 +130,7 @@\n \n     public function handleCallback(Order $order, $request)\n     {\n-        $requestParameters = $request->request->count() !== 0 ? $request->request->all() : $request->query->all();\n+        $requestParameters = 0 !== $request->request->count() ? $request->request->all() : $request->query->all();\n         $parsedRequestData = [];\n \n         $callback = PaymentCallback::create()\n@@ -147,15 +146,16 @@\n             $parsedRequestData = $callbackValidator->validateAndParseData($requestParameters);\n \n             $callback->setParsedRequestData($parsedRequestData);\n-            $callbackStatus = (int)$parsedRequestData['status'];\n+            $callbackStatus = (int) $parsedRequestData['status'];\n \n-            if ($callbackStatus === self::CALLBACK_STATUS_PAYMENT_CONFIRMED) {\n+            if (self::CALLBACK_STATUS_PAYMENT_CONFIRMED === $callbackStatus) {\n                 $callback->setOrder($order);\n                 $this->validateMoneyReceived($order, $parsedRequestData);\n                 $this->getEntityManager()->persist($callback);\n+\n                 return HandlerInterface::RESULT_SUCCESS;\n             }\n-            if ($callbackStatus === self::CALLBACK_STATUS_ADDITIONAL_DATA) {\n+            if (self::CALLBACK_STATUS_ADDITIONAL_DATA === $callbackStatus) {\n                 return HandlerInterface::RESULT_SKIP;\n             }\n             throw new OrderStatusException('Unexpected payment status');\n@@ -209,6 +209,7 @@\n \n     \/**\n      * @param \\WebToPay_PaymentMethodGroup[][] $paymentGroups\n+     *\n      * @return array\n      *\/\n     private function mapGroupsToPaymentTypes($paymentGroups)\n@@ -229,6 +230,7 @@\n                 }\n             }\n         }\n+\n         return $paymentTypes;\n     }\n \n@@ -252,6 +254,7 @@\n     \/**\n      * @param Order $order\n      * @param array $parsedRequestData\n+     *\n      * @throws OrderIntegrityException\n      *\/\n     private function validateMoneyReceived(Order $order, $parsedRequestData)\n@@ -275,8 +278,9 @@\n     }\n \n     \/**\n-     * @param User $user\n+     * @param User   $user\n      * @param string $locale\n+     *\n      * @return string\n      *\/\n     private function getAcceptUrlForUser(User $user, $locale)\n@@ -293,6 +297,7 @@\n \n     \/**\n      * @param string $locale\n+     *\n      * @return string\n      *\/\n     private function getCancelUrl($locale)\n"
        }
    ],
    "time": {
        "total": 0.906
    },
    "memory": 12
}
